text(-sd(y), 4*max(f)/5, "s", family = "HersheySymbol")
text(2*sd(y), max(f)/2, "2s", family = "HersheySymbol")
text(-2*sd(y), max(f)/2, "2s", family = "HersheySymbol")
text(3*sd(y), 2*max(f)/5, "3s", family = "HersheySymbol")
text(-3*sd(y), 2*max(f)/5, "3s", family = "HersheySymbol")
y <- rnorm(2000)
#
hist(y, prob = TRUE, main = "Normal Distribution")
x <- seq(min(y), max(y), length = 2000)
f <- dnorm(x, mean = mean(y), sd = sd(y))
#
lines(x, f, col="red", lwd=2)
# x <- seq(-4, 4, .004)
# x_lf = x[1:1000]
# x_uf = x[1001:2000]
# x_ex = c(x_lf, x_uf)
# plot(x_ex, y, main="Scattered Plot")
# lines(x_ex, y, col="blue")
# dnorm(x,
#       mean = 0,
#       sd = 1,
#       log=FALSE)
X <- -4:4
y <- dnorm(x, mean=1, sd = 3)
z <- rnorm(length(-4:4))
print(y)
print(z)
# dnorm(x,
#       mean = 0,
#       sd = 1,
#       log=FALSE)
x <- -4:4
y <- dnorm(x, mean=1, sd = 3)
z <- rnorm(length(-4:4))
print(y)
print(z)
par(mfrow=c(1, 2))
x <- seq(-4, 8, 0.1)
plot(x, dnorm(x, mean=0, sd=1), type="l",
ylim=c(0, 0.6), ylab="", lwd=2, col="red")
lines(x, dnorm(x, mean=3, sd=1), col="blue",
lty=1, lwd=2)
# Añadimos una leyenda
legend("topright", legend=c(expression(paste(, mu, " ", sigma)), "0 1", "3 1"),
lty = c(0, 1, 1), col = c("blue", "red"), box.lty = 0, lwd = 2)
#-----------------------------------------
# Misma media, distinta desviación típica
#-----------------------------------------
# Media 1, desviación típica 1
plot(x, dnorm(x, mean = 1, sd = 1), type = "l",
ylim = c(0, 1), ylab = "", lwd = 2, col = "red")
# Media 1, desviación típica 0.5
lines(x, dnorm(x, mean = 1, sd = 0.5), col = "blue", lty = 1, lwd = 2)
# Añadimos una leyenda
legend("topright", legend=c(expression(paste(, mu, " ", sigma)), "1 1", "1 0.5"),
lty = c(0, 1, 1), col = c("blue", "red"), box.lty = 0, lwd = 2)
par(mfrow = c(1, 1))
par(mfrow=c(1, 2))
x <- seq(-4, 8, 0.1)
plot(x, dnorm(x, mean=0, sd=1), type="l",
ylim=c(0, 0.6), ylab="", lwd=2, col="red")
lines(x, dnorm(x, mean=3, sd=1), col="blue",
lty=1, lwd=2)
# Añadimos una leyenda
legend("topright", legend=c(expression(paste(, mu, " ", sigma)), "0 1", "3 1"),
lty = c(0, 1, 1), col = c("blue", "red"), box.lty = 0, lwd = 2)
#-----------------------------------------
# Misma media, distinta desviación típica
#-----------------------------------------
# Media 1, desviación típica 1
plot(x, dnorm(x, mean = 1, sd = 1), type = "l",
ylim = c(0, 1), ylab = "", lwd = 2, col = "red")
# Media 1, desviación típica 0.5
lines(x, dnorm(x, mean = 1, sd = 0.5), col = "blue", lty = 1, lwd = 2)
# Añadimos una leyenda
legend("topright", legend=c(expression(paste(, mu, " ", sigma)), "1 1", "1 0.5"),
lty = c(0, 1, 1), col = c("blue", "red"), box.lty = 0, lwd = 2)
par(mfrow = c(1, 1))
valores = read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\EstadisticaDescriptiva\\U1_Datos_PIE1.csv", header=TRUE)
valores = read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\EstadisticaDescriptiva\\U1_Datos_PIE1.csv", header=TRUE)
valores = read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\EstadisticaDescriptiva\\U1_Datos_PIE1.csv", header=TRUE)
library("readxl")
install.packages("readxl")
library("readxl")
valores = read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\EstadisticaDescriptiva\\U1_Datos_PIE1.csv", header=TRUE)
library("readxl")
valores = read_xlsx("C:\\Users\\crisd\\Downloads\\EscuelaCD\\EstadisticaDescriptiva\\U1_Datos_PIE1.xlsx")
length(valores$Sexo)
pnorm(1.25, 0, 1)
1-pnorm(1.25, 0, 1)
1-0.8944
pnorm(-1.25, 0, 1)
(1/(sqrt(2*pi)))*exp((-100^2)/2)
(1/(sqrt(2*pi)))*exp((-1^2)/2)
# Standard normal distribution
r <- seq(-100, 100, 1)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
r
q
plot(r, q)
# Standard normal distribution
r <- seq(-2, 2, 1)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
# Standard normal distribution
r <- seq(-2, 2, .001)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
plot(r, q)
# Standard normal distribution
r <- seq(-3, 3, .001)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
plot(r, q)
# Standard normal distribution
r <- seq(-5, 5, .001)
# Standard normal distribution
r <- seq(-5, 5, .001)
# Standard normal distribution
r <- seq(-5, 5, .001)
plot(r, q)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
plot(r, q)
r <- seq(-3, 3, .001)
q <- (1/(sqrt(2*pi)))*exp((-r^2)/2)
min(q)
max(q)
print(0.004431848 %in% q)
print(0.3989423 %in% q)
#print(0.004431848 %in% q)
#print(0.3989423 %in% q)
match(0.004431848, q, nomatch = 0)
match(0.3989423, q, nomatch=0)
#d P(-0.38 <= Z <= 1.25)
# P(z=1.25) - P(Z=0.38)=
pnorm(1.25, 0, 1) - pnorm(0.38, 0, 1)
#d P(-0.38 <= Z <= 1.25)
# P(z=1.25) - P(Z=-0.38)=
pnorm(1.25, 0, 1) - pnorm(-0.38, 0, 1)
di <- 0.8944
do <- 0.3520
di-do
#
z_min <- (40-60)/18
z_max <- (80-60)/18
z_min
z_max
resp <- pnorm(-1.11, 0, 1)-pnorm(1.11, 0, 1)
resp
resp <- pnorm(1.11, 0, 1) - pnorm(-1.11, 0, 1)
resp
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
head(data1)
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
head(data1)
length(data1)
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
head(data1)
length(data1)
length(data1[1])
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
head(data1)
length(data1)
length(data1[1])
str(data1)
class(data1)
data1 <- read.csv("C:\\Users\\crisd\\Downloads\\EscuelaCD\\parallelOSSU\\Project\\0939.HKHKD_Ticks_18.09.2023-18.09.2023.csv", header=TRUE, stringsAsFactors=FALSE)
head(data1)
length(data1)
length(data1[1])
str(data1)
dim(data1)
hist(x=data1$BidVolume)
hist(x=data1$BidVolume)
print("The mean of ask price is: ", mean(data1$Ask))
hist(x=data1$BidVolume)
print("The mean of ask price is: "+ mean(data1$Ask))
hist(x=data1$BidVolume)
cat("The mean of ask price is: ", mean(data1$Ask), sep = ":")
hist(x=data1$BidVolume)
cat("The mean of ask price is: ", mean(data1$Ask))
hist(x=data1$BidVolume)
cat("The mean of ask price is: ", mean(data1$Ask))
cat("The mean of ask price is: ", mean(data1$Bid))
hist(x=data1$BidVolume)
m_ask = mean(data1$Ask)
m_bid = mean(data1$Bid)
threshold = m_ask - m_bid
cat("The mean of ask price is: ", m_ask, " \n")
cat("The mean of bid price is: ", m_bid, " \n")
cat("The difference between the two is: ", threshold, " \n")
m_ask = mean(data1$Ask)
m_bid = mean(data1$Bid)
threshold = m_ask - m_bid
cat("The mean of ask price is: ", m_ask, " \n")
cat("The mean of bid price is: ", m_bid, " \n")
cat("The difference between the two is: ", threshold, " \n")
hist(x=data1$AdkVolume)
hist(x=data1$AskVolume)
hist(x=data1$BidVolume)
m_ask = mean(data1$Ask)
m_bid = mean(data1$Bid)
threshold = m_ask - m_bid
cat("The length of the data is: ", length(data1), " \n")
cat("The number of rows is: ", length(data1[1]), " \n")
cat("The str() of data is: ", str(data1), " \n")
cat("The dimensions of ask data is: ", dim(data1), " \n")
cat("The mean of ask price is: ", m_ask, " \n")
cat("The mean of bid price is: ", m_bid, " \n")
cat("The difference between the two is: ", threshold, " \n")
m_ask = mean(data1$Ask)
m_bid = mean(data1$Bid)
threshold = m_ask - m_bid
cat("The length of the data is: ", length(data1), " \n")
cat("The number of rows is: ", length(data1[1]), " \n")
cat("\n")
cat("The structure of data is: ", str(data1), " \n")
cat("\n")
cat("The dimensions of ask data is: ", dim(data1), " \n")
cat("The mean of ask price is: ", m_ask, " \n")
cat("The mean of bid price is: ", m_bid, " \n")
cat("The difference between the two is: ", threshold, " \n")
m_ask = mean(data1$Ask)
m_bid = mean(data1$Bid)
threshold = m_ask - m_bid
cat("The length of the data is: ", length(data1), " \n")
cat("The number of rows is: ", length(data1[1]), " \n")
cat("\n")
cat("The structure of data is: ", str(data1), " \n")
cat("\n")
cat("The dimensions of ask data is: ", dim(data1), " \n")
cat("\n")
cat("The mean of ask price is: ", m_ask, " \n")
cat("The mean of bid price is: ", m_bid, " \n")
cat("The difference between the two is: ", threshold, " \n")
hist(x=data1$AskVolume, main = "Ask Volume Histogram",
xlab = "Number of shares", ylab = "Number Participants", col = "coral2")
hist(x=data1$BidVolumemain = "Bid Volume Histogram",
hist(x=data1$AskVolume, main = "Ask Volume Histogram",
xlab = "Number of shares", ylab = "Number Participants", col = "coral2")
hist(x=data1$BidVolume, main = "Bid Volume Histogram",
xlab = "Number of shares", ylab = "Number Participants", col = "bisque2")
#REferences
install.packages("ISLR2")
knitr::opts_chunk$set(echo = TRUE)
x <- seq(1, 10)
x
x <- 1:10
x
x <- seq(-pi, pi, length = 50)
x
y <- x
f <- outer(x, y, function(x, y) cos(y) / (1+x^2))
contour(x, y, f)
contour(x, y, f, nlevels = 45, add = T)
contour(x, y, f, nlevels = 45, add = T)
contour(x, y, f, nlevels = 45, add = T)
new_plot <- contour(x, y, f, nlevels = 45, add = T)
new_plot <- contour(x, y, f, nlevels = 45, add = T)
plot(x, y)
contour(x, y, f, nlevels = 45, add = T)
fa <- (f - t(f)) /2
contour(x, y, fa, nlevels = 15)
plot(x, y)
fa <- (f - t(f)) /2
contour(x, y, fa, nlevels = 15)
image(x, y, fa)
persp(x, y, fa)
persp(x, y, fa, theta=30)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 30)
persp(x, y, fa, theta = 30, phi = 10)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 1)
persp(x, y, fa, theta = 30, phi = 10)
persp(x, y, fa, theta = 30, phi = 20)
persp(x, y, fa, theta = 30, phi = 70)
A <- matrix(1:16, 4, 4)
A
A[2, 3]
A[2, 4]
A[1, 4]
A[1: 4]
A[1:4, 1:2]
A[1:2, 1:4]
A[2, 3]
y <- c(2, 3, 6, 8, 11)
mean(y)
sd(y)
x <- y*(1/5)
x
var(y)
x_exp <-
k <- 1:100
length(k)
dbinom(k, size = 100, prob = 0.3)
x_exp <-
k <- 1
dbinom(k, size = 100, prob = 0.3)
dbinom(k, size = 400, prob = 0.1)
dbinom(k, size = 250, prob = 0.6)
h <- dnorm(1:30, 8, .5)
h
h_x <- (1:30)
h <- dnorm(1:30, 8, .5)
plot(h_x, h)
h_r <- rnorm(1:30, 8, .5)
plot(h_x, h_r)
model <- lm(h_r~h_x, data=data)
abline(model)
data <- data.fram(x=h_x,
y=h_r)
plot(data$x, data$y)
model <- lm(y~x, data=data)
abline(model)
data <- data.frame(x=h_x,
y=h_r)
plot(data$x, data$y)
model <- lm(y~x, data=data)
abline(model)
data <- data.frame(x=h_r,
y=h_r)
plot(data$x, data$y)
model <- lm(y~x, data=data)
abline(model)
set.seed(.3)
h_x <- (1:30)
h <- dnorm(1:30, 8, .5)
h_r <- rnorm(1:30, 8, .5)
data <- data.frame(x=h_r,
y=h_r)
plot(data$x, data$y)
model <- lm(y~x, data=data)
abline(model)
sigma = 4000/71802
sigma
sigma ^2
rnorm(1:60, 71802, .95)
h_r <- dnorm(1, 71802, .056)
val <- dnorm(1, 71802, .056)
val
val <- dnorm(1, 71802, .056)
val
dnorm(3, 422, 13)
my_function <- function(Z, sigma, no) {
Z*(sigma/sqrt(no))
}
margeOne <- function(Z, sigma, no) {
Z*(sigma/sqrt(no))
}
margeOne(1.96, .2, 30)
margeOne(1.96, 1.5, 30)
margeOne(1.96, .9, 30)
margeOne(1.96, 3.8, 30)
margeThree <- function(Z, hatp, no){
Z*((hatp*(1-hatp))/sqrt(no))
}
margeThree(1.96, 0.5, 30)
margeThree(1.96, 0.5, 100)
margeThree(1.96, 0.5, 400)
margeThree(1.96, 0.5, 1000)
margeThree <- function(E, Z, hatp){
sqrt((hatp*(1-hatp))*((E/Z)^2))
}
margeThree_n <- function(E, Z, hatp){
sqrt((hatp*(1-hatp))*((E/Z)^2))
}
margeThree_n(1.96, 0.035, .75)
(E*(sqrt(n)))/sigma
(E*(sqrt(no)))/sigma
#Margin Error II
margErrII <- function(E, no, sigma){
(E * (sqrt(no)))/sigma
}
margErrII(1.96, 50, 4)
margErrII(1.96, 100, 4)
margErrII(1.96, 500, 4)
margErrII(1.96, 1000, 4)
#Problema7
yu = c(35, 49, 52, 54, 65, 51, 51, 47, 86, 36, 46, 33, 39, 45, 39, 63, 95, 35, 30, 48)
yu
hist(yu)
hist(yu, main = "Histograma de NHANES HDL",
xlab = "HDL (mg/dL)", ylab = "Frecuencia")
hist(yu, main = "Histograma de NHANES HDL",
xlab = "HDL (mg/dL)", ylab = "Frecuencia",col = "ivory")
mean(yu)
sd(yu)
margeThree(1.96, 0.49, 1034)
Z*((hatp*(1-hatp))/sqrt(no))
margeThree <- function(Z, hatp, no){
Z * ((hatp*(1-hatp))/sqrt(no))
}
margeThree(1.96, 0.49, 1034)
margeThree(1.96, 0.49, 1500)
1034+(1034*0.015)
margeThree_n <- function(E, Z, hatp){
((hatp*(1-hatp))*((E/Z)^2))^2
}
margeThree_n(0.035, 1.96, 0.75)
margeThree_n <- function(E, Z, hatp){
((hatp*(1-hatp))*((Z/)E^2))^2
margeThree_n <- function(E, Z, hatp){
((hatp*(1-hatp))*((Z/E)^2))^2
}
margeThree_n(0.035, 1.96, 0.75)
margeThree(1.96, .68, 250)
margeThree(1.96, .48, 250)
#Margin Error II
margErrIIstud <- function(t, s, no){
t * (s/(sqrt(no)))
}
margErrIIstud(0.6770, 4, 50)
margErrIIstud(0.6770, 4, 100)
margErrIIstud(0.6770, 4, 500)
margErrIIstud(0.6770, 4, 1000)
margeThreeBIN <- function(Z, hatp, no){
Z * ((hatp*(1-hatp))/no)
}
margeThreeBIN(1.96, 0.5, 30)
margeThreeBIN(1.96, 0.5, 100)
margeThreeBIN(1.96, 0.5, 400)
margeThreeBIN(1.96, 0.5, 1000)
mean(yu)
sd(yu)
#Problema7
tu = c(2.4, 2.9, 2.7, 2.6, 2.9, 2.0, 2.8, 2.2, 2.4, 2.4, 2.0, 2.5)
mean(tu)
sd(tu)
length(tu)
sd(tu)/sqrt(length(tu))
median(yu)
return(sort(yu)[1])
-table(myData$Age)
(E * (sqrt(no)))/sigma
mode = function(){
return(sort(-table(tu))[1])
}
mode()
return(sort(-table(yu))[1])
mode = function(){
return(sort(-table(yu))[1])
}
mode()
var(yu)
x <- seq(-200, 200, -0.1)
f1 <- (1/2) * (n^2) - 3*n
#Folowing the tutorial from:
# https://rpubs.com/joser/dplyr/
library(dplyr)
data(iris)
data("mtcars")
#Group by
g_iris <- group_by(iris, Species)
g_iris
mtcars
str(mtcars)
mtcars %>%
group_by(cyl) %>%
summarise(avg=mean(mpg))
#Task:
# Graph the average of each sepal and petal ratio.
head(mtcars$cyl)
count(mtcars$cyl)
count(mtcars, mtcars$cyl)
# Manipulate Cases
filter(iris, Sepal.Length > 7)
filter(mtcars, hp > 110)
distinct(iris, Species)
# Checking for the retail data gathered
newRetailData %>%
distinct(TransactionId)
list.files(path=".")
library(arules)
library(dplyr)
source("./path_value.R")
setwd("C:\\Users\\Public\\Documents\\MBAExample\\MarketBasketAnalysisExample")
getwd()
source("./path_value.R")
library(rlang)
env_names(globalenv())
#env_names(globalenv())
sessionInfo()
full_data <- read.csv(rawDataPath)
str(full_data)
head(full_data)
tail(full_data)
#Convert the whole data.table as a tibble
wholeRetailData <- as_tibble(full_data)
#Obtaine a table with the unique identifier of the transaction and
# a table with the unique identifier of the products.
transaction.obj <- tibble(wholeRetailData$TransactionId, wholeRetailData$ItemDescription)
head(transaction.obj)
#Obtaine a table with the unique identifier of the transaction and
# a table with the unique identifier of the products.
subset <- tibble(wholeRetailData$TransactionId, wholeRetailData$ItemDescription)
subset %>% write.csv(.,file = ".\\subset.csv")
subset %>% write.csv(.,file = "C:\\Users\\Public\\Documents\\OLD\\archive\\subset.csv")
subsetPath <- "C:\\Users\\Public\\Documents\\OLD\\archive\\"
subsetPath <- "C:\\Users\\Public\\Documents\\OLD\\archive\\subset.csv"
transaction.obj <- read.transactions(file = subsetPath,
format="single", sep = ",",
cols=c("order_id", "product_id")
rm.duplicate= FALSE,
transaction.obj <- read.transactions(file = subsetPath,
format="single", sep = ",",
cols=c("order_id", "product_id"),
rm.duplicate= FALSE,
quote="", skip=0, encoding="unknown")
transaction.obj <- read.transactions(file = subsetPath,
format="single", sep = ",",
cols=c("order_id", "product_id"),
rm.duplicate= FALSE,
quote="", skip=1, encoding="unknown")
